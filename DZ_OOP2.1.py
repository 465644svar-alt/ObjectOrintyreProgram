# Разработай систему управления учетными записями пользователей для небольшой компании. Компания разделяет сотрудников на
# обычных работников и администраторов. У каждого сотрудника есть уникальный идентификатор (ID), имя и уровень доступа.
# Администраторы, помимо обычных данных пользователей, имеют дополнительный уровень доступа и могут добавлять или
# удалять пользователя из системы.
# Требования:
# 1.Класс `User*: Этот класс должен инкапсулировать данные о пользователе: ID, имя и уровень доступа ('user' для обычных сотрудников).
# 2.Класс `Admin`: Этот класс должен наследоваться от класса `User`. Добавь дополнительный атрибут уровня доступа,
# специфичный для администраторов ('admin'). Класс должен также содержать методы `add_user` и `remove_user`, которые
# позволяют добавлять и удалять пользователей из списка (представь, что это просто список экземпляров `User`).
# 3.Инкапсуляция данных: Убедись, что атрибуты классов защищены от прямого доступа и модификации снаружи. Предоставь
# доступ к необходимым атрибутам через методы (например, get и set методы).
#


class User:
    def __init__(self, id, name) :
        self._name = name
        self._access_level = "user"
        self._id = id
    def user_info(self):
        return f"ID: {self._id}, Имя:{self._name}, уровень доступа - {self._access_level}"
user1 = User(1, "Victor")
print(user1.user_info())
class Admin(User):
    def __init__(self, id, name) :
        super().__init__(id, name)
        self._access_level = "admin"
        self._user_list = []

# Класс должен также содержать методы `add_user` и `remove_user`, которые
# # позволяют добавлять и удалять пользователей из списка (представь, что это просто список экземпляров `User`).
    def add_user(self, user):
        self._user_list.append(user)
        return
    def remove_user(self, user):
        self._user_list.remove(user)
        return
# if __name__ == "__main__":
user3 = User(3, "Victor")
user2 = User(2, "Larisa")
admin = Admin(4, "Evgeniy")

admin.add_user(user1)
admin.add_user(user2)
admin.add_user(user3)

print(_user_list())


